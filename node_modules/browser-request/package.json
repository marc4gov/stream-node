{
  "_args": [
    [
      "browser-request@git+https://github.com/matthisk/browser-request.git",
      "C:\\Users\\thijs\\nodeapps\\Stream-Example-Nodejs\\node_modules\\getstream"
    ]
  ],
  "_from": "git+https://github.com/matthisk/browser-request.git",
  "_id": "browser-request@0.3.2",
  "_inCache": true,
  "_installable": true,
  "_location": "/browser-request",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/matthisk/browser-request/master/package.json",
      "gitUrl": "git://github.com/matthisk/browser-request.git",
      "httpsUrl": "git+https://github.com/matthisk/browser-request.git",
      "shortcut": "github:matthisk/browser-request",
      "ssh": "git@github.com:matthisk/browser-request.git",
      "sshUrl": "git+ssh://git@github.com/matthisk/browser-request.git",
      "type": "github"
    },
    "name": "browser-request",
    "raw": "browser-request@git+https://github.com/matthisk/browser-request.git",
    "rawSpec": "git+https://github.com/matthisk/browser-request.git",
    "scope": null,
    "spec": "git+https://github.com/matthisk/browser-request.git",
    "type": "hosted"
  },
  "_requiredBy": [
    "/getstream"
  ],
  "_resolved": "git+https://github.com/matthisk/browser-request.git#253fa31d99bbb4d03bb72e11a5a1c73ccc85ac71",
  "_shasum": "9a259f4be5b72097c995f4ba778a86cb1da7b830",
  "_shrinkwrap": null,
  "_spec": "browser-request@git+https://github.com/matthisk/browser-request.git",
  "_where": "C:\\Users\\thijs\\nodeapps\\Stream-Example-Nodejs\\node_modules\\getstream",
  "author": {
    "email": "jhs@iriscouch.com",
    "name": "Jason Smith"
  },
  "bugs": {
    "url": "https://github.com/iriscouch/browser-request/issues"
  },
  "contributors": [
    {
      "email": "jhs@iriscouch.com",
      "name": "Jason Smith Work"
    },
    {
      "email": "jason.h.smith@gmail.com",
      "name": "Jason Smith"
    },
    {
      "email": "max@maxogden.com",
      "name": "maxogden"
    }
  ],
  "dependencies": {},
  "description": "Browser port of the Node.js 'request' package",
  "devDependencies": {
    "beefy": "~0.4.0",
    "browserify": "~2.25.0",
    "tape": "~1.0.4"
  },
  "engines": [
    "node"
  ],
  "gitHead": "253fa31d99bbb4d03bb72e11a5a1c73ccc85ac71",
  "homepage": "http://github.com/iriscouch/browser-request",
  "keywords": [
    "request",
    "http",
    "browser",
    "browserify"
  ],
  "name": "browser-request",
  "optionalDependencies": {},
  "readme": "# Browser Request: The easiest HTTP library you'll ever see\r\n\r\nBrowser Request is a port of Mikeal Rogers's ubiquitous and excellent [request][req] package to the browser.\r\n\r\nJealous of Node.js? Pining for clever callbacks? Request is for you.\r\n\r\nDon't care about Node.js? Looking for less tedium and a no-nonsense API? Request is for you too.\r\n\r\n[![browser support](https://ci.testling.com/iriscouch/browser-request.png)](https://ci.testling.com/maxogden/browser-request)\r\n\r\n# Examples\r\n\r\nFetch a resource:\r\n\r\n```javascript\r\nrequest('/some/resource.txt', function(er, response, body) {\r\n  if(er)\r\n    throw er;\r\n  console.log(\"I got: \" + body);\r\n})\r\n```\r\n\r\nSend a resource:\r\n\r\n```javascript\r\nrequest.put({uri:'/some/resource.xml', body:'<foo><bar/></foo>'}, function(er, response) {\r\n  if(er)\r\n    throw new Error(\"XML PUT failed (\" + er + \"): HTTP status was \" + response.status);\r\n  console.log(\"Stored the XML\");\r\n})\r\n```\r\n\r\nTo work with JSON, set `options.json` to `true`. Request will set the `Content-Type` and `Accept` headers, and handle parsing and serialization.\r\n\r\n```javascript\r\nrequest({method:'POST', url:'/db', body:'{\"relaxed\":true}', json:true}, on_response)\r\n\r\nfunction on_response(er, response, body) {\r\n  if(er)\r\n    throw er\r\n  if(result.ok)\r\n    console.log('Server ok, id = ' + result.id)\r\n}\r\n```\r\n\r\nOr, use this shorthand version (pass data into the `json` option directly):\r\n\r\n```javascript\r\nrequest({method:'POST', url:'/db', json:{relaxed:true}}, on_response)\r\n```\r\n\r\n## Convenient CouchDB\r\n\r\nBrowser Request provides a CouchDB wrapper. It is the same as the JSON wrapper, however it will indicate an error if the HTTP query was fine, but there was a problem at the database level. The most common example is `409 Conflict`.\r\n\r\n```javascript\r\nrequest.couch({method:'PUT', url:'/db/existing_doc', body:{\"will_conflict\":\"you bet!\"}}, function(er, resp, result) {\r\n  if(er.error === 'conflict')\r\n    return console.error(\"Couch said no: \" + er.reason); // Output: Couch said no: Document update conflict.\r\n\r\n  if(er)\r\n    throw er;\r\n\r\n  console.log(\"Existing doc stored. This must have been the first run.\");\r\n})\r\n```\r\n\r\nSee the [Node.js Request README][req] for several more examples. Request intends to maintain feature parity with Node request (except what the browser disallows). If you find a discrepancy, please submit a bug report. Thanks!\r\n\r\n# Usage\r\n\r\n## Browserify\r\n\r\nBrowser Request is a [browserify][browserify]-enabled package.\r\n\r\nFirst, add `browser-request` to your Node project\r\n\r\n    $ npm install browser-request\r\n\r\nNext, make a module that uses the package.\r\n\r\n```javascript\r\n// example.js - Example front-end (client-side) code using browser-request via browserify\r\n//\r\nvar request = require('browser-request')\r\nrequest('/', function(er, res) {\r\n  if(!er)\r\n    return console.log('browser-request got your root path:\\n' + res.body)\r\n\r\n  console.log('There was an error, but at least browser-request loaded and ran!')\r\n  throw er\r\n})\r\n```\r\n\r\nTo build this for the browser, run it through browserify.\r\n\r\n    $ browserify --entry example.js --outfile example-built.js\r\n\r\nDeploy `example-built.js` to your web site and use it from your page.\r\n\r\n```html\r\n  <script src=\"example-built.js\"></script> <!-- Runs the request, outputs the result to the console -->\r\n```\r\n## License\r\n\r\nBrowser Request is licensed under the Apache 2.0 license.\r\n\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/iriscouch/browser-request.git"
  },
  "scripts": {
    "test": "beefy test.js"
  },
  "testling": {
    "browsers": [
      "ie/6..latest",
      "firefox/3..5",
      "firefox/19..nightly",
      "chrome/4..7",
      "chrome/24..canary",
      "opera/10..next",
      "safari/4..latest",
      "iphone/6",
      "ipad/6"
    ],
    "files": "test.js"
  },
  "version": "0.3.2"
}
